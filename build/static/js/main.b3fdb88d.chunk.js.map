{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/PageTitle/PageTitle.module.css","components/Title/Title.module.css","components/Filter/Filter.module.css","redux/phonebook-actions.js","redux/phonebook-reducers.js","redux/store.js","components/Section/Section.js","components/PageTitle/PageTitle.js","components/Title/Title.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","deleteContact","updateFilter","items","createReducer","state","payload","filter","contact","id","_","phonebookReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","devTools","process","persistor","persistStore","Section","children","className","styles","container","PageTitle","title","defaultProps","Title","ContactForm","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","uuidv4","props","existingContact","find","toLowerCase","alert","newContact","submitHandler","reset","form","onSubmit","this","type","onChange","required","btn","Component","connect","dispatch","Filter","filterValue","filterUpdate","autoComplete","target","filtered","includes","toLocaleLowerCase","onDeleteContact","contactId","length","map","item","onClick","notification","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b3fdb88d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__19OSJ\",\"btn\":\"ContactForm_btn__1OdyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__26QV4\",\"title\":\"Section_title__32JOV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageTitle_title__2ws9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1mvIy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1OI7o\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('phonebook/add');\r\nexport const deleteContact = createAction('phonebook/delete');\r\nexport const updateFilter = createAction('phonebook/updateFilter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, updateFilter } from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [payload, ...state],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [updateFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const phonebookReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport logger from 'redux-logger';\r\n\r\nimport { phonebookReducer } from './phonebook-reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'phonebook',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ children }) => {\r\n  return (\r\n    <section>\r\n      <div className={styles.container}>{children}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './PageTitle.module.css';\r\n\r\nconst PageTitle = ({ title }) => {\r\n  return title && <h1 className={styles.title}>{title}</h1>;\r\n};\r\n\r\nPageTitle.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nPageTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Title.module.css';\r\n\r\nconst Title = ({ title }) => {\r\n  return title && <h2 className={styles.title}>{title}</h2>;\r\n};\r\n\r\nTitle.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Title;\r\n","import React, { Component } from 'react';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook-actions';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  static propTypes = {\r\n    submitHandler: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const id = uuidv4();\r\n    const { name, number } = this.state;\r\n    const { items } = this.props;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    const existingContact = items.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (existingContact) {\r\n      alert(`${existingContact.name} is already in contacts.`);\r\n      return;\r\n    }\r\n\r\n    const newContact = { id, name, number };\r\n\r\n    this.props.submitHandler(newContact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"name\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  submitHandler: contact => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { updateFilter } from '../../redux/phonebook-actions';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ filterValue, filterUpdate }) => {\r\n  return (\r\n    <div className={styles.filter}>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterValue}\r\n          onChange={filterUpdate}\r\n          autoComplete=\"off\"\r\n          required\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  filterValue: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string,\r\n  filterUpdate: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filterValue: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  filterUpdate: event => dispatch(updateFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/phonebook-actions';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ filtered, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.contacts}>\r\n      {filtered.length ? (\r\n        filtered.map(contact => (\r\n          <li key={contact.id} className={styles.item}>\r\n            <div>\r\n              <p>{contact.name}:</p>\r\n              <p>{contact.number}</p>\r\n            </div>\r\n\r\n            <button\r\n              className={styles.btn}\r\n              onClick={() => {\r\n                onDeleteContact(contact.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))\r\n      ) : (\r\n        <li className={styles.notification}>No contact found.</li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filtered: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const filtered = state.contacts.items.filter(\r\n    ({ name, number }) =>\r\n      name.toLowerCase().includes(state.contacts.filter.toLocaleLowerCase()) ||\r\n      number.includes(state.contacts.filter),\r\n  );\r\n  return {\r\n    filtered,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: contactId => dispatch(deleteContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\n\r\nimport Section from './components/Section';\r\nimport PageTitle from './components/PageTitle';\r\nimport Title from './components/Title';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Phone Book\" />\r\n      <Section>\r\n        <Title title=\"Add contacts\" />\r\n        <ContactForm />\r\n        <Title title=\"Сontacts\" />\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\n\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './App';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading=\"Loading...\" persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3AsHY\",\"item\":\"ContactList_item__2DQ-I\",\"btn\":\"ContactList_btn__qygUL\",\"notification\":\"ContactList_notification__2s9_c\"};"],"sourceRoot":""}